name: CI

on:
  pull_request:
    branches: ['*']
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  run-tests:
    name: Checks & Tests
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.5]
        java: ['adopt:11']
    runs-on: ${{ matrix.os }}
    steps:
      - id: scala-major-minor
        run: |
          v=$(echo ${{matrix.scala}} | cut -d'.' -f1-2)
          echo "::set-output name=version::$v"
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: ${{ matrix.java }}

      - uses: coursier/cache-action@v5

      - name: Checks
        run: sbtn ++${{ matrix.scala }}! 'scalafmtSbtCheck; scalafmtCheckAll; compile; doc; docs/mdoc; scalafixCheck'

      - name: Create tmp directory
        run: mkdir tmp

      - name: Test
        run: sbtn ++${{ matrix.scala }}! 'coverage; testOnly * -- -l blobstore.IntegrationTest; coverageAggregate'

      - name: Upload code coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          flags: scala-${{ steps.scala-major-minor.outputs.version }}

  integration-tests:
    name: Integration tests
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.5]
        java: ['adopt:11']
    runs-on: ${{ matrix.os }}
    steps:
      - id: scala-major-minor
        run: |
          v=$(echo ${{matrix.scala}} | cut -d'.' -f1-2)
          echo "::set-output name=version::$v"
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: ${{ matrix.java }}

      - uses: coursier/cache-action@v5

      - name: Checks
        run: sbtn ++${{ matrix.scala }}! 'scalafmtSbtCheck; scalafmtCheckAll; compile; doc; docs/mdoc; scalafixCheck'

      - name: Create tmp directory
        run: mkdir tmp

      - name: Decrypt Box App Key
        run: openssl aes-256-cbc -K ${{ secrets.OPENSSL_KEY }} -iv ${{ secrets.OPENSSL_IV }} -in box/src/test/resources/box_appkey.json.enc -out box/src/test/resources/box_appkey.json -d

      - name: Test
        run: sbtn ++${{ matrix.scala }}! 'coverage; testOnly * -- -n blobstore.IntegrationTest; coverageAggregate'

      - name: Upload code coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          flags: scala-it-${{ steps.scala-major-minor.outputs.version }}
